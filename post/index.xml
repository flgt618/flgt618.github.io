<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on Aloha World</title>
    <link>https://flgt618.github.io/post/</link>
    <description>Recent content in Articles on Aloha World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://flgt618.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>多源最短路径算法</title>
      <link>https://flgt618.github.io/post/chapter-1/</link>
      <pubDate>Sun, 09 Apr 2017 10:58:08 -0400</pubDate>
      
      <guid>https://flgt618.github.io/post/chapter-1/</guid>
      <description>Floyd算法 思路 假设图上的任意两个点，已知两点间的路径权值，如果在图中能够找到一个点, 使其成为两点间的桥点，并且构成的新路径值小于旧路径值。则新路比旧路更短，由此可以得到一个递推公式： $$ d[u][v]=min(d[u][v],d[u][k]+d[k][v]) $$
代码实现 for (int k = 1; k &amp;lt;= n; k++) for (int i = 1; i &amp;lt;= n; i++) for (int j = 1; j &amp;lt;= n; j++) dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]); 潜在疑惑 由于d[i][k]，d[k][j]在不断更新，而不是恒定的最小值，所以如何保证d[i][j]在最后一次更新的时候，d[i][k]，d[k][j]一定是最小的 ?
  令任意两点i和j之间的路径上可选择经过的结点集合中，桥点编号最大的是k，当k=x的时候，d[i][j]得到最小值。
  设i-x中的桥点编号最大的为$x_1$ ,x-j中编号最大的为$x_2$
  易得x&amp;gt;$x_1$ ,x&amp;gt;$x_2$ ①
  假设此时命题成立，则x=$x_1$时，d[i][x]最小，x=$x_2$ 时，d[x][j]最小
  由此可以得到x=k的时候d[i][x]+d[x][j]已经是最小了,那么e[i][j]=min(e[i][j]，e[i][x]+e[x][j])必然可以得到最小值
  ① 原先的错误想法以及更正 假设$x_1$ &amp;gt; k ，当 x = k，由于d[i][k] 还未取得最小值, 故d[i][k] + d[k][j]并没有取到最大值。所以命题①错误？事实上因为i-j的桥点编号最大的必然是k，此时令 k = $x_1$ , 则 d[i][k]的桥点编号皆小于k, 故当 x = k 时，d[i][k]和d[k][j]  ，因此f[i][j]可以取到最大值。 当 $x_2$ &amp;gt; k 时同理。</description>
    </item>
    
    <item>
      <title>搭建你的博客</title>
      <link>https://flgt618.github.io/post/initiateblog/</link>
      <pubDate>Sun, 09 Apr 2017 10:58:08 -0400</pubDate>
      
      <guid>https://flgt618.github.io/post/initiateblog/</guid>
      <description>Windows10利用Hugo搭建个人博客 以Ananke皮肤创建的Hugo站点为例子（因为好看）
 您还需要安装Git才能运行本教程
同时对Git配置name &amp;amp; email
 第一步 导入Hugo 首先进行相应系统的安装
下载完毕后找个你喜欢的地方解压并打开cmd （本文代码框中的操作都在cmd里进行）
输入以下代码验证Hugo是否安装成功：
cd path(path为解压后文件的路径) hugo version 第二步 创建一个新站点 在cmd中输入指令创建一个新的Hugo站点
start为你的站点名字 可自定义
hugo new site start 第三步 添加一个皮肤 请参阅themes.gohugo.io以查看需要考虑的主题列表。
此处以Ananke皮肤为例 在cmd 中输入以下指令
cd start git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke 第四步 装饰你的站点 ananke目录下有个示例站点exampleSite。我们用人家的库，当然得按人家的示例来操作。
在下面，*第四步 装饰你的站点* 直接把exampleSite 中的static、content文件夹和config.toml文件，与根目录（本文中为start文件夹）中的static，content文件夹，和config.toml文件进行替换。
static文件夹：存放图片 content文件夹：存文章 (xxxx.md) //此处做说明 替换完毕后，你的站点下的static、content文件夹终于不是空的了。
同时你根目录（start文件夹）的配置文件config.toml可不再只有几行命令，而是这样
title = &amp;#34;Notre-Dame de Paris&amp;#34; baseURL = &amp;#34;https://example.com&amp;#34; languageCode = &amp;#34;en-us&amp;#34; theme = &amp;#34;gohugo-theme-ananke&amp;#34; themesDir = &amp;#34;.</description>
    </item>
    
  </channel>
</rss>